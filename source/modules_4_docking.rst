Docking
*************

hdock
--------------

This module allows the use of HDOCK, a hybrid docking protocol that combines both template-based and template-free approaches. It
takes two .pdb files as input and returns the .pdb of the 100 highest scoring docking protein complexes generated by HDOCK. The
ligand and receptor .pdb files should have the following name structure: UniProtKB_database.pdb (for instance, P59665_AF.pdb,
P15848_ditasser.pdb).The module expects the .pdb files of the corresponding proteins to be placed in the PDBs/Ligands and PDBs/Receptor 
folders. If more than one ligand .pdb file is present in the PDBs/Ligands folder, the module will proceed with the analysis of all possible 
receptor/lingand pairs.

haddock
--------

This module allows the use of HADDOCK, an information-driven flexible docking
approach that accurately models the 3D structure of macromolecular complexes. This module takes a total of 6 files as input: two protein .pdb files,
two active site files (one for each protein) and two passive site files (one for each protein).
All 6 files must be placed in the input folder of the module. It returns the .pdb of the dedocking
protein complexes with a z-score less than or equal to 0. The complex clusters
resulting from all possible predicted dockings are scored based on a statistic called the
z-score. The z-score represents how many standard deviations the HADDOCK score of
a given cluster is from the mean of all clusters obtained, the lower the z-score, the better
the predictions.
Example:
haddock_all_files=n
Parameter description:
- haddock_all_files= If the user wants to see all the files created during the
docking process set this parameter to y (yes), if the user only wants to
see the most important files, set this parameter to n (no). In the example
given is n

This module takes as input the .pdb files of the ligand and receptor, which should
have the following naming structure UniProtKB_database (e.g. P15848_AF.pdb). It also
uses the active and passive sites of each protein, which must have the following name
structure: UniProtKB_database_active.sites and UniProtKB_database_passive.sites
(e.g.: P15848_AF_active.sites.csv, P15848_AF_passive.sites.csv). The active and
passive sites must be placed in a folder named UniProtKB_database (e.g.: P15848_AF)
within the module's input folder. The module expects the .pdb files of the corresponding
protein to be placed in the PDBs/Ligands and PDBs/Receptor folders.

pydock_ftdock
--------

This module takes a total of 6 files as input: two protein .pdb files, two files with
the active sites (one for each protein) and two files with the passive sites (one for each
protein). All 6 files must be placed in the input folder of the module. It returns the .pdb of
the docking protein complexes with the highest score generated by pydock (see 1.3.5.2
pydock_ftdock).
Example:
pydock_ftdock_number_of_solutions=100
pydock_ftdock_best_pdb=5
Parameter description:
- pydock_ftdock_number_of_solutions= specify the number of solutions to
analyze, this number must be less than or equal to 10000 (recommended:
100). In the example given is 100
- pydock_ftdock_best_pdb= specify the number of best solutions
(recommended: 5). In the example given is 5

This module takes as input the .pdb files of the ligand and receptor, which should
have the following naming structure UniProtKB_database (e.g. P15848_AF.pdb). It also
uses the active and passive sites of each protein, which must have the following name
structure: UniProtKB_database_active.sites and UniProtKB_database_passive.sites
(e.g.: P15848_AF_active.sites.csv, P15848_AF_passive.sites.csv). The active and
passive sites must be placed in a folder named UniProtKB_database (e.g.: P15848_AF)
within the module's input folder. The module expects the .pdb files of the corresponding
protein to be placed in the PDBs/Ligands and PDBs/Receptor folders.

